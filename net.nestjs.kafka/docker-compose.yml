version: '3.7'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - default
      - net_log

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - default
      - net_log
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  mongodb:
    image: mongo
    container_name: mongo
    volumes:
      - /home/dung/Documents/mongo_docke:/data/db
    ports:
      - '27017:27017'
    restart: always
    networks:
      - default
      - net_log

  nestjs:
    image: net_kafka 
    container_name: nest_kafka
    environment:
      - DB_MONGO_CONNECTION=mongodb
      - DB_MONGO_HOST=mongodb
      - DB_MONGO_PORT=27017
      - DB_MONGO_NAME=kafka_logs
      - NEST_PORT=1400
      - KAFKA_HOST=kafka:29092
      - KAFKA_PORT=9092
#      - MONGO_URI=mongodb://mongodb:27017/kafka_logs # Sử dụng 'mongodb' là tên service, không phải image
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - '1400:1400'
    depends_on:
      - mongodb
    restart: unless-stopped
    networks:
      - default
      - net_log

networks:
  net_log:
    external: true
    
